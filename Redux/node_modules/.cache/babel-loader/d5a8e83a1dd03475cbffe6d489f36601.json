{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar crypto = require('crypto');\n\nvar _require = require('./utilities.js'),\n    checkAndMakeDir = _require.checkAndMakeDir;\n\nmodule.exports = function (options, fieldname, filename) {\n  var dir = path.normalize(options.tempFileDir || process.cwd() + '/tmp/');\n  var tempFilePath = path.join(dir, 'tmp' + Date.now());\n  checkAndMakeDir({\n    createParentPath: true\n  }, tempFilePath);\n  var hash = crypto.createHash('md5');\n  var writeStream = fs.createWriteStream(tempFilePath);\n  var fileSize = 0; // eslint-disable-line\n\n  return {\n    dataHandler: function dataHandler(data) {\n      writeStream.write(data);\n      hash.update(data);\n      fileSize += data.length;\n\n      if (options.debug) {\n        return console.log( // eslint-disable-line\n        \"Uploaded \".concat(data.length, \" bytes for \"), fieldname, filename);\n      }\n    },\n    getFilePath: function getFilePath() {\n      return tempFilePath;\n    },\n    getFileSize: function getFileSize() {\n      return fileSize;\n    },\n    getHash: function getHash() {\n      return hash.digest('hex');\n    },\n    complete: function complete() {\n      writeStream.end(); //return empty buffer since data has been uploaded to the temporary file.\n\n      return Buffer.concat([]);\n    },\n    cleanup: function cleanup() {\n      writeStream.end();\n      fs.unlink(tempFilePath, function (err) {\n        if (err) throw err;\n      });\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}