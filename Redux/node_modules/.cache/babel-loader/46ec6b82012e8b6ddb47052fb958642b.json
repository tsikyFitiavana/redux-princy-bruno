{"ast":null,"code":"import _toConsumableArray from \"/home/bruno/Bureau/Redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/bruno/Bureau/Redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  favoritesFilm: []\n};\n\nfunction toggleFavorite() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var nextState;\n\n  switch (action.type) {\n    case 'TOGGLE_FAVORITE':\n      var favoriteFilmIndex = state.favoritesFilm.findIndex(function (item) {\n        return item.id === action.value.id;\n      });\n\n      if (favoriteFilmIndex !== -1) {\n        // Le film est déjà dans les favoris, on le supprime de la liste\n        nextState = _objectSpread({}, state, {\n          favoritesFilm: state.favoritesFilm.filter(function (item, index) {\n            return index !== favoriteFilmIndex;\n          })\n        });\n      } else {\n        // Le film n'est pas dans les films favoris, on l'ajoute à la liste\n        nextState = _objectSpread({}, state, {\n          favoritesFilm: [].concat(_toConsumableArray(state.favoritesFilm), [action.value])\n        });\n      }\n\n      return nextState || state;\n\n    default:\n      return state;\n  }\n}\n\nexport default toggleFavorite;","map":{"version":3,"sources":["/home/bruno/Bureau/Redux/src/Store/Reducers/favoriteReducer.js"],"names":["initialState","favoritesFilm","toggleFavorite","state","action","nextState","type","favoriteFilmIndex","findIndex","item","id","value","filter","index"],"mappings":";;AAEA,IAAMA,YAAY,GAAG;AAAEC,EAAAA,aAAa,EAAE;AAAjB,CAArB;;AAEA,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;AACpD,MAAIC,SAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAK,iBAAL;AACE,UAAMC,iBAAiB,GAAGJ,KAAK,CAACF,aAAN,CAAoBO,SAApB,CAA8B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,KAAP,CAAaD,EAA7B;AAAA,OAAlC,CAA1B;;AACA,UAAIH,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC5B;AACAF,QAAAA,SAAS,qBACJF,KADI;AAEPF,UAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBW,MAApB,CAA4B,UAACH,IAAD,EAAOI,KAAP;AAAA,mBAAiBA,KAAK,KAAKN,iBAA3B;AAAA,WAA5B;AAFR,UAAT;AAID,OAND,MAOK;AACH;AACAF,QAAAA,SAAS,qBACJF,KADI;AAEPF,UAAAA,aAAa,+BAAME,KAAK,CAACF,aAAZ,IAA2BG,MAAM,CAACO,KAAlC;AAFN,UAAT;AAID;;AACD,aAAON,SAAS,IAAIF,KAApB;;AACJ;AACE,aAAOA,KAAP;AAnBF;AAqBD;;AAED,eAAeD,cAAf","sourcesContent":["\n\nconst initialState = { favoritesFilm: [] }\n\nfunction toggleFavorite(state = initialState, action) {\n  let nextState\n  switch (action.type) {\n    case 'TOGGLE_FAVORITE':\n      const favoriteFilmIndex = state.favoritesFilm.findIndex(item => item.id === action.value.id)\n      if (favoriteFilmIndex !== -1) {\n        // Le film est déjà dans les favoris, on le supprime de la liste\n        nextState = {\n          ...state,\n          favoritesFilm: state.favoritesFilm.filter( (item, index) => index !== favoriteFilmIndex)\n        }\n      }\n      else {\n        // Le film n'est pas dans les films favoris, on l'ajoute à la liste\n        nextState = {\n          ...state,\n          favoritesFilm: [...state.favoritesFilm, action.value]\n        }\n      }\n      return nextState || state\n  default:\n    return state\n  }\n}\n\nexport default toggleFavorite"]},"metadata":{},"sourceType":"module"}