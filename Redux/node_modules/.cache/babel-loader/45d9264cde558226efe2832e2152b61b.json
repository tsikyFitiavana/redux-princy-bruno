{"ast":null,"code":"import _toConsumableArray from \"/home/bruno/Documents/projet/my-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/bruno/Documents/projet/my-shop/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bruno/Documents/projet/my-shop/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bruno/Documents/projet/my-shop/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bruno/Documents/projet/my-shop/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bruno/Documents/projet/my-shop/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bruno/Documents/projet/my-shop/src/MesPackets/Commentaire.js\";\nimport React, { Component } from 'react';\nimport LireComment from './LireComment';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './comment.css';\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.setState({\n        term: event.target.value\n      });\n    };\n\n    _this.state = {\n      term: '',\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"margTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.term,\n        onChange: this.onChange,\n        id: \"checkErreurComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"affichageErreurComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(event) {\n          var checkErreurComment = document.getElementById('checkErreurComment');\n          var val = checkErreurComment.value;\n\n          if (val === \"\") {\n            event.preventDefault();\n            var affichageErreurComment = document.getElementById('affichageErreurComment');\n            affichageErreurComment.innerHTML = 'Le champs doit etre remplis';\n          } else {\n            event.preventDefault();\n            var affichageErreurComment = document.getElementById('affichageErreurComment');\n            affichageErreurComment.innerHTML = '';\n\n            _this2.setState({\n              term: '',\n              items: [].concat(_toConsumableArray(_this2.state.items), [_this2.state.term])\n            });\n\n            console.log('ok');\n          }\n        },\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Comment\"))))))), React.createElement(LireComment, {\n        items: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport { Comment as default };","map":{"version":3,"sources":["/home/bruno/Documents/projet/my-shop/src/MesPackets/Commentaire.js"],"names":["React","Component","LireComment","Comment","props","onChange","event","setState","term","target","value","state","items","checkErreurComment","document","getElementById","val","preventDefault","affichageErreurComment","innerHTML","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kCAAP;AACA,OAAO,eAAP;;IACqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAOnBC,QAPmB,GAOR,UAACC,KAAD,EAAW;AAClB,YAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAApB,OAAd;AACD,KATgB;;AAEjB,UAAKC,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE,EADK;AAEXI,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;6BAIQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWH,IAAzB;AAA+B,QAAA,QAAQ,EAAE,KAAKH,QAA9C;AAAwD,QAAA,EAAE,EAAC,oBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,EACA;AAAG,QAAA,EAAE,EAAC,wBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAQ,QAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAE5B,cAAIO,kBAAkB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAzB;AACA,cAAIC,GAAG,GAAGH,kBAAkB,CAACH,KAA7B;;AACA,cAAGM,GAAG,KAAI,EAAV,EAAa;AACXV,YAAAA,KAAK,CAACW,cAAN;AACA,gBAAIC,sBAAsB,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,CAA7B;AACAG,YAAAA,sBAAsB,CAACC,SAAvB,GAAmC,6BAAnC;AACD,WAJD,MAIK;AACLb,YAAAA,KAAK,CAACW,cAAN;AACA,gBAAIC,sBAAsB,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,CAA7B;AACEG,YAAAA,sBAAsB,CAACC,SAAvB,GAAmC,EAAnC;;AACJ,YAAA,MAAI,CAACZ,QAAL,CAAc;AACZC,cAAAA,IAAI,EAAE,EADM;AAEZI,cAAAA,KAAK,+BAAM,MAAI,CAACD,KAAL,CAAWC,KAAjB,IAAwB,MAAI,CAACD,KAAL,CAAWH,IAAnC;AAFO,aAAd;;AAKAY,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;AAEA,SApBG;AAoBD,QAAA,SAAS,EAAG,iBApBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,CAJA,CADF,CADF,CADF,CADF,CADJ,EAmCI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCJ,CADF;AAuCD;;;;EAnDgCX,S;;SAAhBE,O","sourcesContent":["import React, { Component } from 'react'\nimport LireComment from './LireComment';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './comment.css'\nexport default class Comment extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        term: '',\n        items: [],\n      };\n    }\n    onChange = (event) => {\n        this.setState({term: event.target.value});     \n      }\n    render() {\n      return (\n        <div>\n            <form className=\"App\" >\n              <div id=\"margTop\">\n                <table>\n                  <tbody>\n                    <tr>\n                    <td><input value={this.state.term} onChange={this.onChange} id=\"checkErreurComment\"/>\n                    <p id=\"affichageErreurComment\"></p>\n                    </td>\n                    <td><button onClick={(event) => {\n\n                        var checkErreurComment = document.getElementById('checkErreurComment')\n                        var val = checkErreurComment.value\n                        if(val ===\"\"){\n                          event.preventDefault()\n                          var affichageErreurComment = document.getElementById('affichageErreurComment')\n                          affichageErreurComment.innerHTML = 'Le champs doit etre remplis'\n                        }else{\n                        event.preventDefault()\n                        var affichageErreurComment = document.getElementById('affichageErreurComment')\n                          affichageErreurComment.innerHTML = ''\n                      this.setState({\n                        term: '',\n                        items: [...this.state.items, this.state.term],\n                        \n                      });\n                      console.log('ok')\n                    }\n                      \n                    }} className = \"btn btn-primary\">Comment</button></td>\n                  </tr>\n                  </tbody>\n                </table>\n              </div>\n            </form>\n            <LireComment items={this.state.items}/>\n        </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}