{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar Readable = require('stream').Readable;\n/**\r\n * Returns true if argument is function.\r\n */\n\n\nvar isFunc = function isFunc(func) {\n  return func && func.constructor && func.call && func.apply ? true : false;\n};\n/**\r\n * Creates a folder for file specified in the path variable\r\n * @param {Object} fileUploadOptions\r\n * @param {String} filePath\r\n */\n\n\nvar checkAndMakeDir = function checkAndMakeDir(fileUploadOptions, filePath) {\n  //Check upload options were set.\n  if (!fileUploadOptions) return false;\n  if (!fileUploadOptions.createParentPath) return false; //Check whether folder for the file exists.\n\n  if (!filePath) return false;\n  var parentPath = path.dirname(filePath); //Create folder if it is not exists.\n\n  if (!fs.existsSync(parentPath)) fs.mkdirSync(parentPath);\n  return true;\n};\n/**\r\n * Copy file via streams\r\n * @param {String} src - Path to the source file\r\n * @param {String} dst - Path to the destination file.\r\n */\n\n\nvar copyFile = function copyFile(src, dst, callback) {\n  //cbCalled flag and runCb helps to run cb only once.\n  var cbCalled = false;\n\n  var runCb = function runCb(err) {\n    if (cbCalled) return;\n    cbCalled = true;\n    callback(err);\n  }; //Create read stream\n\n\n  var readable = fs.createReadStream(src);\n  readable.on('error', runCb); //Create write stream\n\n  var writable = fs.createWriteStream(dst);\n  writable.on('error', function (err) {\n    readable.destroy();\n    runCb(err);\n  });\n  writable.on('close', function () {\n    return runCb();\n  }); //Copy file via piping streams.\n\n  readable.pipe(writable);\n};\n/**\r\n * Save buffer data to a file.\r\n * @param {Buffer} buffer - buffer to save to a file.\r\n * @param {String} filePath - path to a file.\r\n */\n\n\nvar saveBufferToFile = function saveBufferToFile(buffer, filePath, callback) {\n  if (!Buffer.isBuffer(buffer)) {\n    callback(new Error('buffer variable should be a Buffer!'));\n    return;\n  } //Setup readable stream from buffer.\n\n\n  var streamData = buffer;\n  var readStream = Readable();\n\n  readStream._read = function () {\n    readStream.push(streamData);\n    streamData = null;\n  }; //Setup file system writable stream.\n\n\n  var fstream = fs.createWriteStream(filePath);\n  fstream.on('error', function (error) {\n    return callback(error);\n  });\n  fstream.on('close', function () {\n    return callback();\n  }); //Copy file via piping streams.\n\n  readStream.pipe(fstream);\n};\n\nmodule.exports = {\n  isFunc: isFunc,\n  checkAndMakeDir: checkAndMakeDir,\n  copyFile: copyFile,\n  saveBufferToFile: saveBufferToFile\n};","map":null,"metadata":{},"sourceType":"script"}